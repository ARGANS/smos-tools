#!/usr/bin/env python3
"""
The data types for an Ocean Salinity UDP
"""

import numpy as np

datatype = [('Grid_Point_Data',
             [('Grid_Point_ID', np.uint32),
              ('Latitude', np.float32),
              ('Longitude', np.float32)]),
            ('Geophysical_Parameters_Data', [
                ('Equiv_ftprt_diam', np.float32),
                ('Mean_acq_time', np.float32),
                ('SSS1', np.float32),
                ('Sigma_SSS1', np.float32),
                ('SSS2', np.float32),
                ('Sigma_SSS2', np.float32),
                ('SSS3', np.float32),
                ('Sigma_SSS3', np.float32),
                ('A_card', np.float32),
                ('Sigma_A_card', np.float32),
                ('WS', np.float32),
                ('SST', np.float32),
                ('Tb_42_5H', np.float32),
                ('Sigma_Tb_42_5H', np.float32),
                ('Tb_42_5V', np.float32),
                ('Sigma_Tb_42_5V', np.float32),
                ('Tb_42_5X', np.float32),
                ('Sigma_Tb_42_5X', np.float32),
                ('Tb_42_5Y', np.float32),
                ('Sigma_Tb_42_5Y', np.float32)
            ]),
            ('Control_Flags_1', np.uint32),
            ('Control_Flags_2', np.uint32),
            ('Control_Flags_3', np.uint32),
            ('Control_Flags_4', np.uint32),
            ('Product_Confidence_Descriptors', [
                ('Dg_chi2_1', np.uint16),
                ('Dg_chi2_2', np.uint16),
                ('Dg_chi2_3', np.uint16),
                ('Dg_chi2_Acard', np.uint16),
                ('Dg_chi2_P_1', np.uint16),
                ('Dg_chi2_P_2', np.uint16),
                ('Dg_chi2_P_3', np.uint16),
                ('Dg_chi2_P_Acard', np.uint16),
                ('Dg_quality_SSS1', np.uint16),
                ('Dg_quality_SSS2', np.uint16),
                ('Dg_quality_SSS3', np.uint16),
                ('Dg_quality_Acard', np.uint16),
                ('Dg_num_iter_1', np.uint8),
                ('Dg_num_iter_2', np.uint8),
                ('Dg_num_iter_3', np.uint8),
                ('Dg_num_iter_4', np.uint8),
                ('Dg_num_meas_l1c', np.uint16),
                ('Dg_num_meas_valid', np.uint16),
                ('Dg_border_fov', np.uint16),
                ('Dg_af_fov', np.uint16),
                ('Dg_sun_tails', np.uint16),
                ('Dg_sun_glint_area', np.uint16),
                ('Dg_sun_glint_fov', np.uint16),
                ('Dg_sun_fov', np.uint16),
                ('Dg_sun_glint_L2', np.uint16),
                ('Dg_Suspect_ice', np.uint16),
                ('Dg_Galactic_Noise_Error', np.uint16),
                ('Dg_sky', np.uint16),
                ('Dg_moon_glint', np.uint16),
                ('Dg_RFI_L1', np.uint16),
                ('Dg_RFI_X', np.uint16),
                ('Dg_RFI_Y', np.uint16),
                ('Dg_RFI_probability', np.uint16),
                ('X_swath', np.float32),
            ]),
            ('Science_Flags_1', np.uint32),
            ('Science_Flags_2', np.uint32),
            ('Science_Flags_3', np.uint32),
            ('Science_Flags_4', np.uint32)
            ]

control_flags_dtype = [('Fg_ctrl_ignore', np.bool),
                       ('Fg_ctrl_range', np.bool),
                       ('Fg_ctrl_sigma', np.bool),
                       ('Fg_ctrl_chi2', np.bool),
                       ('Fg_ctrl_chi2_P', np.bool),
                       ('Fg_ctrl_contaminated', np.bool),
                       ('Fg_ctrl_sunglint', np.bool),
                       ('Fg_ctrl_moonglint', np.bool),
                       ('Fg_ctrl_gal_noise', np.bool),
                       ('Fg_ctrl_mixed_scene', np.bool),
                       ('Fg_ctrl_reach_maxiter', np.bool),
                       ('Fg_ctrl_num_meas_min', np.bool),
                       ('Fg_ctrl_num_meas_low', np.bool),
                       ('Fg_ctrl_many_outliers', np.bool),
                       ('Fg_ctrl_marq', np.bool),
                       ('Fg_ctrl_roughness', np.bool),
                       ('Fg_ctrl_foam', np.bool),
                       ('Fg_ctrl_ecmwf', np.bool),
                       ('Fg_ctrl_valid', np.bool),
                       ('Fg_ctrl_no_surface', np.bool),
                       ('Fg_ctrl_range_Acard', np.bool),
                       ('Fg_ctrl_sigma_Acard', np.bool),
                       ('SPARE', np.bool),
                       ('Fg_ctrl_used_faraTEC', np.bool),
                       ('Fg_ctrl_poor_geophysical', np.bool),
                       ('Fg_ctrl_poor_retrieval', np.bool),
                       ('Fg_ctrl_suspect_rfi', np.bool),
                       ('Fg_ctrl_rfi_prone_X', np.bool),
                       ('Fg_ctrl_rfi_prone_Y', np.bool),
                       ('Fg_ctrl_adjusted_ra', np.bool),
                       ('Fg_ctrl_retriev_fail', np.bool),
                       ]

science_flags_dtype = [('Fg_sc_land_sea_coast1', np.bool),
                       ('Fg_sc_land_sea_coast2', np.bool),
                       ('Fg_sc_TEC_gradient', np.bool),
                       ('Fg_sc_in_clim_ice', np.bool),
                       ('Fg_sc_ice', np.bool),
                       ('Fg_sc_suspect_ice', np.bool),
                       ('Fg_sc_rain', np.bool),
                       ('Fg_sc_high_wind', np.bool),
                       ('Fg_sc_low_wind', np.bool),
                       ('Fg_sc_high_SST', np.bool),
                       ('Fg_sc_low_SST', np.bool),
                       ('Fg_sc_high_SSS', np.bool),
                       ('Fg_sc_low_SSS', np.bool),
                       ('Fg_sc_sea_state_1', np.bool),
                       ('Fg_sc_sea_state_2', np.bool),
                       ('Fg_sc_sea_state_3', np.bool),
                       ('Fg_sc_sea_state_4', np.bool),
                       ('Fg_sc_sea_state_5', np.bool),
                       ('Fg_sc_sea_state_6', np.bool),
                       ('Fg_sc_sst_front', np.bool),
                       ('Fg_sc_sss_front', np.bool),
                       ('Fg_sc_ice_Acard', np.bool),
                       ('Fg_sc_ecmwf_land', np.bool),
                       ]
